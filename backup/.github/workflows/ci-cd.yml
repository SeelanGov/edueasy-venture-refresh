# GitHub Actions CI/CD for EduEasy (Vite + Supabase)
# - Installs dependencies
# - Checks env vars
# - Runs lint, type-check, build
# - Optionally deploys (add your deploy step)

name: CI/CD

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest    defaults:
      run:
        working-directory: edueasy-venture-refresh
    env:
      VITE_SUPABASE_URL: ${{ secrets.VITE_SUPABASE_URL }}
      VITE_SUPABASE_ANON_KEY: ${{ secrets.VITE_SUPABASE_ANON_KEY }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4      - name: Use Node.js 20.x
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
          cache-dependency-path: '**/package-lock.json'

      - name: Install dependencies
        run: npm ci
        
      - name: Cache build artifacts
        uses: actions/cache@v4
        with:
          path: |
            dist
            .vite
          key: ${{ runner.os }}-build-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-build-

      - name: Check Supabase env vars
        run: npm run check-env

      - name: Lint
        run: npm run lint

      - name: Type check
        run: npm run type-check      - name: Build
        run: npm run build
        
      - name: Upload build artifacts
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist/
          retention-days: 7

      - name: Report Status
        if: always()
        uses: actions/github-script@v7
        with:
          script: |
            const conclusion = '${{ job.status }}'.toLowerCase();
            const color = conclusion === 'success' ? '#28a745' : '#dc3545';
            const { owner, repo } = context.repo;
            
            github.rest.repos.createCommitStatus({
              owner,
              repo,
              sha: context.sha,
              state: conclusion,
              context: 'CI/CD',
              description: `Build ${conclusion}`,
              target_url: `${context.serverUrl}/${owner}/${repo}/actions/runs/${context.runId}`
            });
