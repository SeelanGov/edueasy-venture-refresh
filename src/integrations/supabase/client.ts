import { SUPABASE_ANON_KEY, SUPABASE_URL } from '@/lib/env';
import { createClient, type SupabaseClient } from '@supabase/supabase-js';
import { type Database } from './types';
// This file is automatically generated. Do not edit it directly.

let _supabase: SupabaseClient<Database> | null = null;

export const getSupabase = (): SupabaseClient<Database> => {
  if (_supabase) return _supabase;

  _supabase = createClient<Database>(SUPABASE_URL, SUPABASE_ANON_KEY, {
    auth: {
      persistSession: true,
      autoRefreshToken: true,
    },
  });
  return _supabase;
};

// For backward compatibility - lazy initialize on access
export const supabase = new Proxy({} as SupabaseClient<Database>, {
  get(target, prop) {
    const client = getSupabase();
    return client[prop as keyof SupabaseClient<Database>];
  }
});
